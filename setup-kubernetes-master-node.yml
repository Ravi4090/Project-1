---
- name: Setup Kubernetes Master Node
  hosts: webserver
  become: yes
  tasks:
    - name: Update package repositories
      apt:
        update_cache: yes

    - name: Set hostname
      hostname:
        name: kmaster-node

    - name: Disable swap
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Load required kernel modules
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl settings for Kubernetes
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/kubernetes.conf
        state: present
        reload: yes
      loop:
        - { name: "net.bridge.bridge-nf-call-ip6tables", value: "1" }
        - { name: "net.bridge.bridge-nf-call-iptables", value: "1" }
        - { name: "net.ipv4.ip_forward", value: "1" }

    - name: Install curl
      apt:
        name: curl
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install necessary packages for Kubernetes
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg

    - name: Download Kubernetes GPG key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Update package repositories
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable kubelet service
      service:
        name: kubelet
        enabled: yes
        state: started

    - name: Pull Kubernetes images
      command: kubeadm config images pull

    - name: Run kubeadm init
      shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem --ignore-preflight-errors=Port-10250

    - name: Create .kube directory
      shell: mkdir -p $HOME/.kube

    - name: Copy admin.conf to user's .kube directory
      shell: sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

    - name: Change ownership of config file
      shell: sudo chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Deploy Flannel network addon
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
